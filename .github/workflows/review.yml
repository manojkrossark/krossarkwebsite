name: Google Gemini Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  gemini_review:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Get changed files diff
      id: diff
      run: |
        git fetch origin ${{ github.event.pull_request.base.ref }}
        git diff origin/${{ github.event.pull_request.base.ref }} -- ${{ github.event.pull_request.head.ref }} > changes.diff
        DIFF=$(head -c 65536 changes.diff | jq -Rs .)
        echo "diff=$DIFF" >> $GITHUB_OUTPUT

    - name: Call Google Gemini API for review
      id: gemini
      env:
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
      run: |
        echo "Requesting Google Gemini code review..."

        DIFF_CONTENT=${{ steps.diff.outputs.diff }}

        PROMPT="You are a helpful code reviewer. Please review the following git diff and provide feedback on potential issues and improvements:\n\n$DIFF_CONTENT\n\n"

        MODEL="gemini-1.5-flash"
        ENDPOINT="https://generativelanguage.googleapis.com/v1beta2/models/models/${MODEL}:generateText"
        
        PAYLOAD=$(jq -n \
          --arg prompt "$PROMPT" \
          '{
            prompt: {
              text: $prompt
            },
            temperature: 0.2,
            candidateCount: 1,
            topP: 0.95,
            topK: 40
          }')
        
        RESPONSE=$(curl -s -X POST "$ENDPOINT?key=$GOOGLE_API_KEY" \
          -H "Content-Type: application/json" \
          -d "$PAYLOAD")
        
          echo "Raw Gemini API response:"
          echo "$RESPONSE"
      
          # Try parsing the review text safely (fallback to empty if parsing fails)
          REVIEW=$(echo "$RESPONSE" | jq -r '.candidates[0].message.content.text // empty')
      
          echo "Parsed review:"
          echo "$REVIEW"
      
          REVIEW=$(echo "$RESPONSE" | jq -r '.candidates[0].message.content.text')
          echo "review=$REVIEW" >> $GITHUB_OUTPUT

    - name: Post review comment on PR
      uses: peter-evans/create-or-update-comment@v2
      with:
        token: ${{ secrets.PAT }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          ### ðŸ¤– Google Gemini AI Code Review
          ${{ steps.gemini.outputs.review }}
